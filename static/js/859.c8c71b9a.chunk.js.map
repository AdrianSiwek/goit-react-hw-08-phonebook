{"version":3,"file":"static/js/859.c8c71b9a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/StatusFilter/StatusFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contact.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getFilterValue = state => state.filters.status;\n\nexport const getIsLoadingStatus = state => state.contacts.isLoading;\n\nexport const getErrorStatus = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"submit\":\"ContactForm_submit__eYq7N\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\n\n\nimport styles from './ContactForm.module.css';\nimport { addContact } from \"redux/contacts/operations\";\n\n\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n\n   const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n       const number = event.target.elements.number.value;\n       const normalizedCase = name.toLowerCase();\n        let isAdded = false;\n\n        contacts.forEach((el) => {\n            if (el.name.toLowerCase() === normalizedCase) {\n                alert(`${name} is already in contacts`);\n                isAdded = true;\n            }\n        });\n\n        if (isAdded) {\n            return;\n        }\n            dispatch(addContact({name, number}));\n            event.target.reset();\n    };\n    \n\n    return (\n            <div>\n                <form className={styles.submit} onSubmit={handleSubmit}>\n                    <label className={styles.label}>\n                        Name\n                        <input\n                            className={styles.input}\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                        />\n                    </label>\n                    <label className={styles.label}>\n                    Number\n                        <input\n                            className={styles.input}\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </label>\n                    <button\n                        className={styles.btn}\n                        type=\"submit\"\n                    >\n                        <span>Add contact</span> \n                    </button>\n                </form>\n            </div>\n        );\n    }\n\n \n\nexport default ContactForm;","import React from 'react';\nimport { useDispatch } from \"react-redux\";\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\n\n\n\nimport { setStatusFilter } from 'redux/filter/filterSlice';\n\n\nconst StatusFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (event) => {\n        dispatch(setStatusFilter(event.target.value));\n    };\n  return ( \n      <Paper\n      component=\"form\"\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n    >\n       <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Find contacts by name\"\n        inputProps={{ 'aria-label': 'find contacts by name' }}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Enter name\" \n        onChange={handleFilterChange}\n      />\n      <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n      <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\n        <DirectionsIcon />\n      </IconButton>\n      </Paper>\n     );\n}\n\n\n \nexport default StatusFilter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"contact\":\"ContactList_contact__0STHS\",\"btn\":\"ContactList_btn__6Piat\",\"form\":\"ContactList_form__YbZHX\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts, getErrorStatus, getFilterValue} from \"redux/contacts/selectors\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nimport * as React from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nimport styles from './ContactList.module.css';\n\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const statusFilter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const error = useSelector(getErrorStatus);\n  \n  const filtersContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(statusFilter.toLowerCase()) ||\n      contact.number.replace(/-|\\s/g, '').includes(statusFilter.replace(/-|\\s/g, ''))\n  );\n\n  \n  \n  return filtersContacts.length > 0 ?(\n    <ul className={styles.list}>\n          {filtersContacts.map(({ id, name, number }) => (\n         <ListItem\n            key={id}\n            secondaryAction={\n              <Button variant=\"outlined\" disableElevation\n                onClick={() => dispatch(deleteContact(id))}\n                startIcon={<DeleteIcon />}\n              >\n                Delete\n              </Button>\n            }\n            disablePadding\n          >\n            <ListItemButton>\n              <ListItemAvatar>\n                <Avatar\n                  alt={`Avatar n°${name}`}\n                  src={`/static/images/avatar/${name}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={id} primary={`${name}: ${number}`} />\n            </ListItemButton>\n          </ListItem>\n      ))}\n    </ul>\n  ) : ((error && <p>Error: {error}</p> )|| <p>No contacts</p>\n    );\n}\n\n\nexport default ContactList;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getErrorStatus, getIsLoadingStatus } from 'redux/contacts/selectors';\nimport { fetchContact } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport StatusFilter from 'components/StatusFilter/StatusFilter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\n\n\n\n const Contact = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoadingStatus);\n   const error = useSelector(getErrorStatus);\n   \n   const [open, setOpen] = React.useState(false);\n   const handleOpen = () => setOpen(true);\n   const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n   return (\n     <>\n       <div>\n         <Button onClick={handleOpen}>Add Contact</Button>\n         <Modal\n           open={open}\n           onClose={handleClose}\n           aria-labelledby=\"modal-modal-title\"\n           aria-describedby=\"modal-modal-description\"\n         >\n           <Box sx={style}>\n             <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n               Add Contact\n             </Typography>\n             <ContactForm />\n           </Box>\n         </Modal>\n       </div>\n       <div>\n         <StatusFilter />\n         {isLoading && !error ? <p>Loading...</p> : <ContactList />}\n       </div>\n     </>\n   );\n};\n\nexport default Contact;"],"names":["getContacts","state","contacts","items","getFilterValue","filters","status","getIsLoadingStatus","isLoading","getErrorStatus","error","dispatch","useDispatch","useSelector","className","styles","onSubmit","event","preventDefault","name","target","elements","value","number","normalizedCase","toLowerCase","isAdded","forEach","el","alert","addContact","reset","type","pattern","title","required","Paper","component","sx","p","display","alignItems","width","InputBase","ml","flex","placeholder","inputProps","onChange","setStatusFilter","IconButton","Search","Divider","height","m","orientation","color","Directions","statusFilter","filtersContacts","filter","contact","includes","replace","length","map","id","ListItem","secondaryAction","Button","variant","disableElevation","onClick","deleteContact","startIcon","Delete","disablePadding","ListItemButton","ListItemAvatar","Avatar","alt","src","ListItemText","primary","style","position","top","left","transform","bgcolor","border","boxShadow","React","open","setOpen","useEffect","fetchContact","Modal","onClose","Box","Typography"],"sourceRoot":""}