{"version":3,"file":"static/js/115.e1cea50e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/StatusFilter/StatusFilter.module.css?8bce","components/StatusFilter/StatusFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contact.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getFilterValue = state => state.filters.status;\n\nexport const getIsLoadingStatus = state => state.contacts.isLoading;\n\nexport const getErrorStatus = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"submit\":\"ContactForm_submit__eYq7N\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\n\nimport styles from './ContactForm.module.css';\nimport { addContact } from \"redux/contacts/operations\";\n\n\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n\n   const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n       const number = event.target.elements.number.value;\n       const normalizedCase = name.toLowerCase();\n        let isAdded = false;\n\n        contacts.forEach((el) => {\n            if (el.name.toLowerCase() === normalizedCase) {\n                alert(`${name} is already in contacts`);\n                isAdded = true;\n            }\n        });\n\n        if (isAdded) {\n            return;\n        }\n            dispatch(addContact({name, number}));\n            event.target.reset();\n    };\n    \n\n    return (\n            <div>\n                <form className={styles.submit} onSubmit={handleSubmit}>\n                    <label className={styles.label}>\n                        Name\n                        <input\n                            className={styles.input}\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                        />\n                    </label>\n                    <label className={styles.label}>\n                    Number\n                        <input\n                            className={styles.input}\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </label>\n                    <button\n                        className={styles.btn}\n                        type=\"submit\"\n                    >\n                        <span>Add contact</span> \n                    </button>\n                </form>\n            </div>\n        );\n    }\n\n \n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"StatusFilter_label__RG-4O\",\"input\":\"StatusFilter_input__dIHgT\"};","import React from 'react';\nimport { useDispatch } from \"react-redux\";\n\n\nimport style from './StatusFilter.module.css';\nimport { setStatusFilter } from 'redux/contacts/filterSlice';\n\n\nconst StatusFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (event) => {\n        dispatch(setStatusFilter(event.target.value));\n    };\n    return ( \n        <label className={style.label}>\n        Find contacts by name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Enter name\" \n          onChange={handleFilterChange}\n        />\n        </label>\n     );\n}\n\n\n \nexport default StatusFilter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"contact\":\"ContactList_contact__0STHS\",\"btn\":\"ContactList_btn__6Piat\",\"form\":\"ContactList_form__YbZHX\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts, getErrorStatus, getFilterValue} from \"redux/contacts/selectors\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nimport styles from './ContactList.module.css';\n\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const statusFilter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const error = useSelector(getErrorStatus);\n  \n  const filtersContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(statusFilter.toLowerCase()) ||\n      contact.number.replace(/-|\\s/g, '').includes(statusFilter.replace(/-|\\s/g, ''))\n  );\n  const handleDeleteContact = data => {\n    dispatch(deleteContact(data));\n};\n  \n  \n  return filtersContacts.length > 0 ?(\n    <ul className={styles.list}>\n          {filtersContacts.map(({ id, name, number }) => (\n        <li className={styles.contact} \n          key={id}>\n        <p>{name}:</p>\n        <p>{number}</p>\n         <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => handleDeleteContact(id)}\n          >\n            <span>Delete</span>\n          </button>        \n        </li>\n      ))}\n    </ul>\n  ) : ((error && <p>Error: {error}</p> )|| <p>No contacts</p>\n    );\n}\n\n\nexport default ContactList;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getErrorStatus, getIsLoadingStatus } from 'redux/contacts/selectors';\nimport { fetchContact } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport StatusFilter from 'components/StatusFilter/StatusFilter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport styles from 'components/ContactList/ContactList.module.css';\n\n\nexport const Contact = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoadingStatus);\n  const error = useSelector(getErrorStatus);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.form}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <StatusFilter />\n      {isLoading && !error ? <p>Loading...</p> : <ContactList />}\n    </div>\n  );\n};"],"names":["getContacts","state","contacts","items","getFilterValue","filters","status","getIsLoadingStatus","isLoading","getErrorStatus","error","dispatch","useDispatch","useSelector","className","styles","onSubmit","event","preventDefault","name","target","elements","value","number","normalizedCase","toLowerCase","isAdded","forEach","el","alert","addContact","reset","type","pattern","title","required","style","onChange","setStatusFilter","statusFilter","filtersContacts","filter","contact","includes","replace","length","map","id","onClick","data","deleteContact","Contact","useEffect","fetchContact"],"sourceRoot":""}